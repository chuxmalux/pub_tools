
``` WIN SURVEY ``` {
=========================================================================================================================
# from nix 
telnet -l [user] [IP] | tee -i --error-mode=exit telnet.log 

{ ``` TRIAGE  ```

``` ---------- INITIAL SA / SYSTEM CHARACTERIZATION 1 ---------- ```
date /t && time /t 
w32tm /tz # timezone bias (UTC=Bias+Localtime) or reg query HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation
	# Time Zone: Current: TIME_ZONE_ID_ == daylight or standard, can also crossref current date to the Date Codes. If NONE then place does not observe Daylight Savings 

doskey /history 

# //SYSINTERNAL// user check (logins / net shares)
psloggedon 
query user  ||  query session

# logging policy
auditpol /get /category:* 

# user account info
wmic useraccount get name,sid # RIDs 
	reg query hklm\system\currentcontrolset\control\hivelist # current logged on users/SIDs 
whoami /groups # current users groups via WMI - shows NetBIOS alias names and LDAP
net users 
net user [username] # shows ONLY netBIOS names 


# system characterization 
ipconfig /all # is this the correct host? - hostname or static IP
	whois [IP] # geolocate 

systeminfo 
	reg query hklm\system\currentcontrolset\services\tcpip\parameters
	reg query "HKLM\Software\Microsoft\Windows NT\CurrentVersion"
	reg query "HKLM\System\CurrentControlSet\Control\Windows" #CSDVersion (most recent SP installed, if any)
	ver

``` ------------ BEGIN TRIAGE --------------- ```
{ # Triage Walkthrough
	- process list 
		1. weirdly named / mispelled processes?
		1.5 do a lookup on everything (the .exe)
			what is [.exe] ? 
			- where its launching from
			- known good filesize 
			- severity ratings based on location 
		2. what context it running from? 
			- common system processes: used for footprinting 
			- server mode processes : regardless a user is logged in or not 
			- user mode proc: only when user logged in 
		3. IF NOTHING FOUND
			- start top to bottom, look up every unknown proc 
			- attributes of process. is it abnormal / suspicious ? 
				- characteristics
					- where its running, spelling of name, CLI options 
				- behaviors / activities 
					- loading/calling other process, loading dlls, estab conn. to another machine 
		4. check executable paths 
			- os: system32
			- user: Program Files 
		5. netstat -anob
			- associate sus procs 
			- validate all ports per process (search up ports you dont know, e.g. 995. Then crossref with the proc)
				- confirm valid procs come from appropriate directory
		6. pslist -t 
			- confirm process 
					left justified (all way on left): autostarted by early in boot or its parent process exited
		6.5 tasklist /m
			- is it hosting service? services are hosted via DLLs 
		7. listdlls | find command (check my survey syntax) 
			- why is executable path not displayed? = common when another proc/executable calls it to start 
		7.5 look for firewall rules on sus ports! 
			netsh advfirewall firewall show rule name=all | findstr "8080"
			netsh advfirewall firewall show rule name=all | findstr "995"
			netsh advfirewall firewall show rule name=all | findstr "LocalPort:"
			netsh advfirewall firewall show rule name=all | findstr "RemotePort:"
			netsh advfirewall firewall show rule name=all | findstr /C"Rule Name:"
			netsh advfirewall firewall show rule name="for malware"
}

# processes 1
pslist # //SYSINTERNAL// 1. Weirdly named/ mispelled processes? Full google lookups [name].exe 
pslist -t # 2. Context? Is it under system / server / user mode? Should it be? Consider parents
tasklist  # Consider: Attributes, behavior, activities
	tasklist /v /fo:list 

# processes 2 
wmic process get executablepath
wmic process get commandline | more 
	wmic process where name="proc.exe" get processid,parentprocessid | more 

# connections 
netstat -ano | findstr EST # established 
netstat -ano | findstr LIST # listening 
	# run firewall searches against sus ports (jump to wevtutil coms)
netstat -anob

# //SYSINTERNAL// malicious DLLs (for bad procs)
tasklist /m # 1. Is it hosting a service? Procs host services via DLLs 
listdlls | find /i "command"
	listdlls -d [dll_name]

# correlate suspicious shortcut (.lnk) to target 
	type "file.lnk" | find "\"

# services 
tasklist /svc 
wmic service get Name, Caption, State, ServiceType, StartMode, pathname /format:list

# //SYSINTERNAL// files associated with sus handles 
handle /accepteula
handle -a -p [pid]

# firewall port lookups 
netsh advfirewall firewall show rule name=all | findstr "8080"
netsh advfirewall firewall show rule name=all | findstr "995"
netsh advfirewall firewall show rule name=all | findstr "LocalPort:"
netsh advfirewall firewall show rule name=all | findstr "RemotePort:"
netsh advfirewall firewall show rule name=all | findstr /C"Rule Name:"
netsh advfirewall firewall show rule name="for malware"

------------ SYSTEM CHARACTERIZATION 2 --------------

# network mapping
route print
netstat -rn 

# domains/workgroups (-r = purge & reload remote cache name table)
nbtstat -rn 

# shares 
net use # any resources host is connected to
net share # resources host is sharing out 
# port to file mapper - not shrinkwrap
fport 

# firewall
netsh advfirewall show allprofiles
netsh advfirewall firewall show rule name=all
netsh advfirewall firewall show rule profile=private name=all

``` ---------- PERSISTENCE / SUS CHECKS ---------- ```

{ # Dir checks (/tw by default) - SUS & PERSISTENCE
dir /ah [PATH] --- view hidden file / dirs 
dir /od c:\
dir /od c:\windows\
dir /od c:\windows\system32
dir /od c:\windows\system32\winevt\logs
dir /od "%appdata%\microsoft\windows\start menu\programs\startup" # also enum startup reg key dirs below 

dir /od c:\users\*
dir /od C:\Documents and Settings\* # XP 
dir /od c:\programdata\*
dir /od "c:\program files"
dir /od "c:\program files (x86)"
dir /od c:\windows\temp\*
}

# IE Cache {
<Windows Directory>\Users\<yourusername>\AppData\Local\Microsoft\Windows\INetCache\IE
C:\Users\ [username]\AppData\Local\Microsoft\Windows\Temporary Internet Files  # 7 / Vista 
C:\Documents and Settings\ [username]\Local Settings\Temporary Internet Files # XP }

{ # beware of: scripting utilies, if set to point to above insecure common used paths 
	cscript.exe
	wscript.exe
	rundll32.exe
	regsvr32.exe
	wmic.exe
	cmd.exe
	mshta.exe
	powershell.exe
}

# //SYSINTERNAL// autostart programs (boot/ user login)
wmic startup # THIS COVERS ALL USERS startup, autorunsc - only covers current user startups UNLESS SPECIFY USER 
	StartUp value = User startup 
autorunsc -a -m # HUGE output. Avoid or use -m to reduce (don't show signed windows)
	autorunsc -b // boot 
	autorunsc -l // logon 
	autorunsc -t // scheduled tasks
	autorunsc -s -m // services 
		^ all are HOTSPOTS. check carefully, crossref dirs and signatures (publisher AND ver)
	autorunsc -d // Appinit DLLs 
	autorunsc -e // explorer addons 
	autorunsc -w // winlogon entries (shell and winit)
	autorunsc -k // bootup DLLs 

	# run per logged in user
	autorunsc [username] // loads user profile into registry, shows THEIR startups 

# scheduled tasks // if found malicious proc, check its PPID. The parent could be persisted, or a taskscheduler service 
	- confirm the TaskToRun: path, signed author, schedule type: trigger event
schtasks /query | findstr "Running"
schtasks /query /v /FO list # just run through it all. goodies @  the top 
	at 
autoruns -t 


{ ``` REG KEYS ```
# Run/RunOnce 
reg query hklm\software\microsoft\windows\currentversion\run &&
reg query hklm\software\microsoft\windows\currentversion\runonce &&
reg query hkcu\software\microsoft\windows\currentversion\run && 
reg query hkcu\software\microsoft\windows\currentversion\runonce 
reg query hklm\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run

# Winlogon - shell = explorer.exe, userinit = userinit.exe. otherwise malware --- also shows default Domain Name and User 
reg query "hklm\software\microsoft\windows nt\currentversion\winlogon

# BootExecute key (value should = autocheck autochk*) 
reg query "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager" &&
reg query "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Control\Session Manager"

# Startup Keys (user/system startup folders) - check & dir
reg query "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders" /v Startup &&
reg query "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders" /v Startup &&
reg query  "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders" /v Startup &&
reg query  "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders" /v Startup

# Boot Services 
reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\service"
	reg query "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce"
	reg query "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices"

# AppInit_DLLs: should DLL be loaded from this key? or from another app
reg query "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows /v AppInit_DLLs"

# file renames 
reg query "HKLM\System\CurrentControlSet\Control\Session Manager\FileRenameOperations" 
}

# check drivers (look for sus names and SPACES/BREAKS in output) e.g. dump_diskdump.sys/dump_buslogic.sys = rootkits 
driverquery /v
	driverquery /si # signed driver check
	driverquery | find /I "wdf01000" 
	
cmd /c dir c:\windows\system32\drivers /od /tw 
cmd /c dir c:\windows\syswow64\drivers /od /tw'


}

{ ``` PROSECUTE ```  
---------- GENERAL ----------
# consider: abnormal filepath? Run full recursive search (dir /b /s C:\*file*), weird timetamps: when started(boot/user)? arguments,ports,parents,links,dlls,drivers, weird cmd shells? Firewall rules corellate to allow malware? large filesize/colons file.htm:stuff <ADS>

# get all wmic process info
wmic process where "name='process.exe'" get * /format:list
wmic process where (processid=3516) get * /format:list
wmic process where (processid=1756) get CommandLine,CreationDate,Description,ExecutablePath,Name,ParentProcessID,ProcessID /format:list

# get file properties info 
wmic datafile where name="C:\\Program Files\\vmtoolsd.exe" get * /format:list

# owner of dir/files
dir /q C:\Users\Bob\

# search filesystem
dir /b /s C:\*filename.txt*

---------- DEEP DIVE ----------
echo %DATE% %TIME%

# File timestamps 
dir "C:\Program Files\VMware\VMware Tools\vmtoolsd.exe"
wmic datafile where name="C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe" get CreationDate, installdate, LastModified

# Directory timestamps 
wmic fsdir where name="C:\\DirectoryOfInterest" get creationdate,lastmodified,lastaccessed
dir /tw /od "C:\Path\To\FileOrDir.txt" # last write/modify is the default 
dir /tc "C:\Path\To\FileOrDir.txt"
dir /ta "C:\Path\To\FileOrDir.txt"

# look for firewall rules on sus ports
	netsh advfirewall firewall show rule name=all | findstr "8080"
	netsh advfirewall firewall show rule name=all | findstr "995"
	netsh advfirewall firewall show rule name=all | findstr "LocalPort:"
	netsh advfirewall firewall show rule name=all | findstr "RemotePort:"
	netsh advfirewall firewall show rule name=all | findstr /C"Rule Name:"
	netsh advfirewall firewall show rule name="for malware"

# hash // run against VT 
certutil -hashfile [pathtofile] MD5 / SHA256 

# signature ver
signtool.exe [path]  

}

{ ``` misc notes/ cmds ```
# Event Log queries
- find time of application install via log entry 
wevtutil qe Application /q:*[System[(EventID=11707)]] | findstr WinZip
wevtutil qe Security "/q:* [System [ (EventID=4625)]]" /rd:true /format:text # logon failures 

# user account info
wmic useraccount where name="Andrew" get * /format:list

# domain vs workgroup?
 1. type reg query hklm\system\currentcontrolset\services\tcpip\parameters"
 2. Look for "NV Domain" key. Next, enter 'systeminfo | findstr /C:"Domain" '
	- If the NV Domain key doesn't exist or exists and is empty = definitely workgroup. 
	- If there's something in NV Domain and it matches systeminfo = definitely domain. 
	- If there's something in NV Domain and it does *not* match systeminfo = definitely workgroup
	
# pslist/tasklist enumeration:
	- idle process thread count = number of logical processors 
	- duration of system = smss.exe elapsed time
	- duration of user = explorer.exe elapsed time 
	- system (boot) vs user spawned process? check what comes before / after explorer.exe, also pslist -t


# processes of note 
- Common windows PSPs:

# find all ADS on system
powershell -command "Get-ChildItem -Path C:\ -Recurse -File | Get-Item -stream *"
$(Get-PSDrive -PSProvider FileSystem).Root | Foreach { Get-ChildItem $_ -recurse | Get-Item -Stream * }
	# this way covers all drives 
	
# PSP check (also refer to pslist /autorunsc for executables) // Common PSP: MsMpEng.exe + mssense.exe (defender), MpCmdRun.exe (Defender Antivirus), msseces.exe (MS Sec. Essentials), also check svchost.exe && taskhostw.exe 
wmic /node:localhost /namespace:\\root\securitycenter2 path antivirusproduct get displayname /format:list
***fix - wmic antivirusproduct get displayname /format:list
	
----------- NUGGETS -------------

# how to find bootloader on machine?
- dir search bootload 
- bcdedit 

# other ways to find windows OS (without systeminfo and stuff
- autorunsc - shows version
- bcdedit /enum = descripion of OS reveals the OS 

# find last modified of autoran registry keys
autorunsc

# seach for any data / key / value in reegistry 
regfind -n <telnet> 
reg query ***compose search to look for values containing <telnet>
reg query HKxx[/d] [/k] [/v] /f "search pattern" /s [/e] [/c]
reg query HKLM /d /f "telnet" /s 

# search for configuration of a service/app
reg query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services
reg query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tlntsvr /v

reg query HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\TelnetServer\1.0 /v LoginScript



``` add all page survey commands... ```
}
=========================================================================================================================
}




{ COURSE MATERIAL  

{ # Survey Exercises 1-3 commands

cmd /c "date /t && time /t" 

ipconfig /all

reg query "HKLM\Software\Microsoft\Windows NT\CurrentVersion"

# logged on users + via resource shares 
psloggedon

# processes, also uptime w/SMSS elapsed time 
pslist

# malicious DLLs
listdlls | C:\>find "Command"
	listdlls -d [dllname] # find procs associated to dll 
	listdlls [processname/pid] # find dlls associated to proc 
tasklist /m # <--------- listdlls = better reference. tasklist /m did not list all dlls 

netstat -ano

# check associated executable  
netstat -anob 

# process to port mapper 
fport 

# files associated with execs
handle

netstat -rn 

# domain/workgroup shares (netbios)
nbtstat -rn

# programs configured to autostart at boot
autorunsc 

# Hive info for users
reg query HKLM\System\CurrentControlSet\Control\Hivelist 

# malicious file renames
reg query "HKLM\System\CurrentControlSet\Control\Session Manager\FileRenameOperations" 

reg query "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows"

reg query "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon"
}

{ ``` Survey Methodology - Triage ```

{ # System Characterization
date /t && time /t 

# display users currently logged in 
net session 

# show recent logged in users 
psloglist "Security" -i 528 -s | find /i "Logon Type: 10"

ver

# how long system has been running 
net statistics

# processor and system memory info
systeminfo  

# hostname 
hostname

# NIC info
ipconfig

# ARP table 
arp -a 

# routes 
route print 
}

{ # Process Commands 

# verbose and services 
tasklist /v /svc 
wmic process list

# processes/mem/threads and process tree 
pslist -x -t 

# get ppid/process 
wmic process where (processid=1234) get processid 
wmic process get executablepath

# signtool.exe 
confirm/deny if windows tool is verified/signed by windows source 

- create list of unknown/ potential anomalous processes while triaging (IOT prosecute)
}

{ # Network Connections 
netstat -anob 


- double check processes on list / diguised procs 
- network conns can't be hidden easily w/o use of sophisticated rootkit 
}

{ # Disk Checks 
}

{ # Final Checks (Startup procs, services, scheduled tasks, reg keys)

# startup procs // compare sizes against known good examples 
wmic startup get caption, command 

# service info 
sc getdisplayname [service_name]

sc qc service_name 

sc qyert state= all
sc query state= inactive 
sc query state= inactive | findstr "[DISPLAY_NAME"]

# scheduled tasks 
schtasks 
at # now deprecated, locked down on Vista & later 

# registry 
// check Run/ RunOnce keys  # distinction: runonce will be ran once, then removed from registry (only if successfully executed) . Run - is persistent. Also, HKLM is more common than HKCU (iot affect entire system & run at startup, instead of when user logs in)

HKLM\Software\Microsoft\Windows\CurrentVersion\Run
HKLM\Software\Microsoft\Windows\CurrentVersion\RunOnce
HKCU\Software\Microsoft\Windows\CurrentVersion\Run
HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce 

# check to ensure is explorer.exe; can be modified to run something bad BEFORE explorer.exe 
HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell

# ~check reg keys for this file~ (/s = subdirs, /f = find/filter
reg query HKLM /s /f "C:\Windows\Temp\iexplorer.exe"
}

}

{ ``` Process Prosecution ```

{ // Quick Checks 
# brief search + analysis 
1. Internet search + brief analysis
2. install directories, related files, file hashes 

# check file properties 
wmic datafile where name = "C:\\Windows\\system32\\calc.exe" 

# signtool.exe - verify digital signature 
signtool.exe [path]
}

{ // Post Quick Checks & SPECIFIC BEHAVIORS 
1. is proc running in valid / expected directory? 
	C:\windows\system32
	C:\program files
	C:\windows
	# anomalous locations 
	C:\windows\temp
	C:\windows\user

2. reexamine permissions of the executable/process? 

{ # Specific behaviors 
	1. executable characteristics 
		- where does it live on disk?
		- what is it doing? e.g. what handles are open? what DLLs are loaded?
		- are there any human readable strings in binary?
		- what found via open source research? GOOGLE-FU
	2. network capabilities
		- does it initiate outbound conns?
		- it it listening locally?
		- established conns? if so, what do. E.g. exfil data, receive instructions, more?
	3. associated files
		- what else was created/changed around same time as executable? e.g. files/dirs/reg keys created or modified?
		- it it creating/outputting files/logs on disk? Any config or C2 related files?
	4. if proc runs automatically, what is the persistence method
		- service?
		- scheduled task?
		- one or more registry keys? 
}

}

{ # Windows Prosecution - path, timestamps, parent, args
# 1. find sus process 
tasklist # /v /svc 
wmic process list /format:list
pslist # -x -t 

# 2. Check path 
wmic process get executablepath 
wmic process where name='vmtoolsd.exe' get executablepath 

# 3. Check timestamps 
dir "C:\Program Files\VMware\VMware Tools\vmtoolsd.exe"
wmic datafile where name="C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe" get CreationDate, installdate, LastModified

wmic fsdir where name="C:\\DirectoryOfInterest" get creationdate,lastmodified,lastaccessed

# check parent 
wmic process where (processid=1640) get parentprocessid 

# check CLI arguments ran w/executable 
wmic process where "name='vmtoolds.exe'" get CommandLine




# MINES
	
# get all wmic process info
wmic process where "name='vmtoolds.exe'" get * /format:list
wmic process where (processid=1640) get * /format:list
# get all datafile (properties) info 
wmic datafile where name="C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe" get * /format:list

# hash
certutil -hashfile [pathtofile] MD5 / SHA256 

}

}

{ # Survey Video - Edited 

ipconfig /all # is this the correct host? - hostname or static IP

wmic process get executablepath,processid,parentprocessid | more # enumerate processes

wmic process get commandline | more # exec paths & arguments 

netstat -ano | findstr EST # established 
netstat -ano | findstr LIST # listening 

date /t && time /t 

psloggedon # users logged in / access net shares 

auditpol /get /category:* # which events get logged?

pslist # running procs, but also: 
	- Idle threads = # of processor cores 
	- System PID of 4 = XP or later, winit/LSM  = Vista+

reg query hklm\system\currentcontrolset\control\windows # service pack # (CSD Version)

nbtstat -n # names registered locally by netbios apps (server/redirector)

route print # network mapping 
netstat -rn 

net use # any resources host is connected to 

net share # resources host is sharing out 

net start # services currently running 

# files associated with sus handles 
handle // SYSINTERNAL TOOL 

# search file locs 
dir /tc /od C:\windows\system32 # order by creation date (determine legitimacy of CLI tools)

autorunsc -b # programs to autostart, boot execute (specifies apps/services/commands ran on startup)
	autorunsc -a b 
autorunsc -l # logon startups (autostart)
	autorunsc -a l

reg query hklm\software\microsoft\windows\currentversion\run &&
reg query hklm\software\microsoft\windows\currentversion\runonce &&
reg query hkcu\software\microsoft\windows\currentversion\run && 
reg query hkcu\software\microsoft\windows\currentversion\runonce &&
reg query "hklm\software\microsoft\windows nt\currentversion\winlogon" /v shell  # login persistence method (should be explorer.exe)

net users # users displayed on system

reg query hklm\system\currentcontrolset\control\hivelist # SIDs of users !! currently logged on !! computer 

# NOTES
- record all commands with timestamps (helps correlate with logging)
	- includes pre exploit / vulnerability scans 
- FLOW // am i caught? + is it safe to operate 
	1. initial survey w/basic commands
	2. determine continuation of survey (verify, are we not logging?)
	3. assess target SA 
}

}